// import type { Metadata } from "next";
// import { Open_Sans } from "next/font/google";
// import "./globals.css";
// import { ClerkProvider } from "@clerk/nextjs";
// import { cn } from "@/lib/utils";

// import { ThemeProvider } from "@/components/providers/theme-provider";


// import { NavigationSidebar } from "@/components/navigation/navigation-sidebar";
// import { ModalProvider } from "@/components/providers/modal-provider";



// const font = Open_Sans({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Team Chat Application",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <ClerkProvider
//     afterSignOutUrl={"/"}
//     >
//       <html lang="en" suppressHydrationWarning>
//         <body className={cn(
//           font.className,
//           "bg-white dark:bg-[#202020]"
//           )}>
//           <ThemeProvider
//             attribute="class"
//             defaultTheme="dark"
//             enableSystem={false}
//             storageKey="tca-theme"
//           >
//             {/* <NavigationSidebar /> */}

//             {/* <ModalProvider /> */}
            
//             <div>
//             {children}
//             </div>
//           </ThemeProvider>
//           </body>
//       </html>
//     </ClerkProvider>
//   );
// }

import "./globals.css";
import { cn } from "@/lib/utils";

import { ThemeProvider } from "@/components/providers/theme-provider";
import { ModalProvider } from "@/components/providers/modal-provider";
// import { SocketProvider } from "@/components/providers/socket-provider";
// import { QueryProvider } from "@/components/providers/query-provider";

import type { Metadata } from "next";
import { Open_Sans } from "next/font/google";
import { ClerkProvider } from "@clerk/nextjs";

const openSans = Open_Sans({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Discord Clone",
  description:
    "Discord Clone with Next.js, React.js, TailWindCSS & TypeScript."
};

export default function RootLayout({
  children
}: {
  children: React.ReactNode;
}) {
  return (
    <ClerkProvider>
      <html lang="en" suppressHydrationWarning>
        <body
          className={cn(openSans.className, "bg-white dark:bg-[#313338]")}
        >
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem
            storageKey="discord-clone-theme"
          >
            
              <ModalProvider />
              <div>{children}</div>
            
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}